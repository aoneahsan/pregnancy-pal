{
  "permissions": {
    "allow": [
      "Bash(npm run lint)",
      "Bash(npm run:*)",
      "Bash(npm run type-check:*)",
      "Bash(grep:*)",
      "Bash(flutter create:*)",
      "Bash(flutter pub add:*)",
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(dart pub global activate:*)",
      "Bash(flutterfire:*)",
      "Bash($HOME/.pub-cache/bin/flutterfire:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(flutter create:*)",
      "Bash(mkdir:*)",
      "Bash(flutter pub:*)",
      "Bash(npm init:*)",
      "Bash(flutter:*)",
      "Bash(rm:*)",
      "Bash(*:*)",
      "Bash(npx tsc:*)",
      "Bash(npx depcheck:*)",
      "Bash(rg:*)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(pkill:*)",
      "WebFetch(domain:productfruits.com)",
      "WebFetch(domain:userguiding.com)",
      "WebFetch(domain:whatfix.com)",
      "WebFetch(domain:www.helppier.com)",
      "WebFetch(domain:www.chameleon.io)",
      "WebFetch(domain:www.userlane.com)",
      "WebFetch(domain:www.pendo.io)",
      "Bash(mv:*)",
      "Bash(yarn build)",
      "Bash(yarn add:*)",
      "Bash(yarn lint)",
      "Bash(yarn prettier:*)",
      "WebFetch(domain:productfruits.com)",
      "WebFetch(domain:userguiding.com)",
      "WebFetch(domain:whatfix.com)",
      "WebFetch(domain:helppier.com)",
      "WebFetch(domain:chameleon.io)",
      "WebFetch(domain:userlane.com)",
      "WebFetch(domain:pendo.io)",
      "WebFetch(domain:perkforce.com)",
      "WebFetch(domain:aoneahsan.com)",
      "WebFetch(domain:zaions.com)",
      "WebFetch(domain:google.com)",
      "WebFetch(domain:facebook.com)",
      "WebFetch(domain:instagram.com)",
      "WebFetch(domain:twitter.com)",
      "WebFetch(domain:linkedin.com)",
      "WebFetch(domain:youtube.com)",
      "WebFetch(domain:tiktok.com)",
      "WebFetch(domain:pinterest.com)",
      "WebFetch(domain:reddit.com)",
      "WebFetch(domain:quora.com)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:dev.to)",
      "WebFetch(domain:hashnode.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:gitlab.com)",
      "WebFetch(domain:bitbucket.org)",
      "WebFetch(domain:codeberg.org)",
      "WebFetch(domain:sourcehut.org)",
      "WebFetch(domain:sourceforge.net)",
      "WebFetch(domain:npmjs.com)",
      "WebFetch(domain:yarnpkg.com)",
      "WebFetch(domain:pnpmjs.com)",
      "WebFetch(domain:deno.com)",
      "WebFetch(domain:bun.sh)",
      "WebFetch(domain:firecrawl.dev)",
      "WebFetch(domain:docs.firecrawl.dev)",
      "Bash(chmod:*)",
      "Bash(touch:*)",
      "Bash(npm view:*)",
      "Bash(npm search:*)",
      "Bash(npx rollup:*)",
      "Bash(npm publish:*)",
      "Bash(node:*)",
      "Bash(npm pkg:*)",
      "Bash(yarn install)",
      "Bash(npx tailwindcss:*)",
      "Bash(rollup:*)",
      "Bash(yarn tailwindcss:*)",
      "Bash(yarn list:*)",
      "Bash(yarn test)",
      "Bash(yarn clean)",
      "Bash(yarn tsc:*)",
      "WebFetch(domain:docs.firecrawl.dev)",
      "Bash(pip show:*)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(twine check:*)",
      "Bash(twine:*)",
      "Bash(yarn create:*)",
      "Bash(true)",
      "Bash(npx cap init:*)",
      "Bash(yarn dev)",
      "Bash(yarn outdated)",
      "Bash(yarn type-check)",
      "Bash(yarn test:*)",
      "Bash(npx cap add:*)",
      "Bash(npx cap:*)",
      "Bash(pod install:*)",
      "Bash(pod update:*)",
      "Bash(pod search:*)",
      "Bash(pod repo update:*)",
      "Bash(pod repo remove:*)",
      "Bash(pod repo add:*)",
      "Bash(pod repo list:*)",
      "Bash(pod repo update:*)",
      "Bash(pod repo remove:*)",
      "Bash(pod repo add:*)",
      "Bash(pod repo list:*)",
      "Bash(yarn preview)",
      "Bash(npx cypress open:*)",
      "Bash(npx patch-package:*)",
      "Bash(cp:*)",
      "Bash(tree:*)",
      "Bash(npm audit:*)",
      "Bash(yarn audit)",
      "Bash(npx firebase deploy:*)",
      "Bash(yarn firebase deploy:*)",
      "Bash(yarn deploy:rules:*)",
      "Bash(firebase deploy:*)",
      "Bash(yarn lint:*)",
      "Bash(yarn eslint:*)",
      "Bash(sed:*)",
      "Bash(yarn info:*)",
      "Bash(firebase functions:config:get:*)",
      "Bash(./node_modules/.bin/tsc:*)",
      "Bash(yarn fix-lint-errors:*)",
      "Bash(cat:*)",
      "Bash(npm run lint)",
      "Bash(npm run:*)",
      "Bash(npm run type-check:*)",
      "Bash(grep:*)",
      "Bash(flutter create:*)",
      "Bash(flutter pub add:*)",
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(dart pub global activate:*)",
      "Bash(flutterfire:*)",
      "Bash($HOME/.pub-cache/bin/flutterfire:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(flutter create:*)",
      "Bash(mkdir:*)",
      "Bash(flutter pub:*)",
      "Bash(npm init:*)",
      "Bash(flutter:*)",
      "Bash(rm:*)",
      "Bash(*:*)",
      "Bash(npx tsc:*)",
      "Bash(npx depcheck:*)",
      "Bash(rg:*)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(pkill:*)",
      "WebFetch(domain:productfruits.com)",
      "WebFetch(domain:userguiding.com)",
      "WebFetch(domain:whatfix.com)",
      "WebFetch(domain:www.helppier.com)",
      "WebFetch(domain:www.chameleon.io)",
      "WebFetch(domain:www.userlane.com)",
      "WebFetch(domain:www.pendo.io)",
      "Bash(mv:*)",
      "Bash(yarn build)",
      "Bash(yarn add:*)",
      "Bash(yarn lint)",
      "Bash(yarn prettier:*)",
      "WebFetch(domain:productfruits.com)",
      "WebFetch(domain:userguiding.com)",
      "WebFetch(domain:whatfix.com)",
      "WebFetch(domain:helppier.com)",
      "WebFetch(domain:chameleon.io)",
      "WebFetch(domain:userlane.com)",
      "WebFetch(domain:pendo.io)",
      "WebFetch(domain:perkforce.com)",
      "WebFetch(domain:aoneahsan.com)",
      "WebFetch(domain:zaions.com)",
      "WebFetch(domain:google.com)",
      "WebFetch(domain:facebook.com)",
      "WebFetch(domain:instagram.com)",
      "WebFetch(domain:twitter.com)",
      "WebFetch(domain:linkedin.com)",
      "WebFetch(domain:youtube.com)",
      "WebFetch(domain:tiktok.com)",
      "WebFetch(domain:pinterest.com)",
      "WebFetch(domain:reddit.com)",
      "WebFetch(domain:quora.com)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:dev.to)",
      "WebFetch(domain:hashnode.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:gitlab.com)",
      "WebFetch(domain:bitbucket.org)",
      "WebFetch(domain:codeberg.org)",
      "WebFetch(domain:sourcehut.org)",
      "WebFetch(domain:sourceforge.net)",
      "WebFetch(domain:npmjs.com)",
      "WebFetch(domain:yarnpkg.com)",
      "WebFetch(domain:pnpmjs.com)",
      "WebFetch(domain:deno.com)",
      "WebFetch(domain:bun.sh)",
      "WebFetch(domain:firecrawl.dev)",
      "WebFetch(domain:docs.firecrawl.dev)",
      "Bash(chmod:*)",
      "Bash(touch:*)",
      "Bash(npm view:*)",
      "Bash(npm search:*)",
      "Bash(npx rollup:*)",
      "Bash(npm publish:*)",
      "Bash(node:*)",
      "Bash(npm pkg:*)",
      "Bash(yarn install)",
      "Bash(npx tailwindcss:*)",
      "Bash(rollup:*)",
      "Bash(yarn tailwindcss:*)",
      "Bash(yarn list:*)",
      "Bash(yarn test)",
      "Bash(yarn clean)",
      "Bash(yarn tsc:*)",
      "WebFetch(domain:docs.firecrawl.dev)",
      "Bash(pip show:*)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(twine check:*)",
      "Bash(twine:*)",
      "Bash(yarn create:*)",
      "Bash(true)",
      "Bash(npx cap init:*)",
      "Bash(yarn dev)",
      "Bash(yarn outdated)",
      "Bash(yarn type-check)",
      "Bash(yarn test:*)",
      "Bash(npx cap add:*)",
      "Bash(npx cap:*)",
      "Bash(pod install:*)",
      "Bash(yarn preview)",
      "Bash(npx cypress open:*)",
      "Bash(npx patch-package:*)",
      "Bash(cp:*)",
      "Bash(tree:*)",
      "Bash(npm audit:*)",
      "Bash(yarn audit)",
      "Bash(npx firebase deploy:*)",
      "Bash(yarn firebase deploy:*)",
      "Bash(yarn deploy:rules:*)",
      "Bash(firebase deploy:*)",
      "Bash(yarn lint:*)",
      "Bash(yarn eslint:*)",
      "Bash(sed:*)",
      "Bash(yarn info:*)",
      "Bash(firebase functions:config:get:*)",
      "Bash(./node_modules/.bin/tsc:*)",
      "Bash(yarn fix-lint-errors:*)",
      "Bash(cat:*)",
      "Bash(corepack enable)",
      "Bash(yarn typecheck)",
      "Bash(yarn upgrade:*)",
      "Bash(npm info:*)",
      "Bash(npm ls:*)",
      "Bash(yarn audit:*)",
      "Bash(yarn build:*)",
      "Bash(npx:*)",
      "Bash(git init:*)",
      "Bash(then echo \"- $provider\")",
      "Bash(for:*)",
      "Bash(do sed -i '' '/private isInitialized: boolean = false;/d' \"$file\")",
      "Bash(done)",
      "Bash(do sed -i '' 's/this\\.isInitialized = true;/this.state.initialized = true;/g' \"$file\")",
      "Bash(do sed -i '' 's/this\\.isInitialized = false;/this.state.initialized = false;/g' \"$file\")",
      "Bash(yarn prepublishOnly)",
      "Bash(yarn run prettier:*)",
      "Bash(*:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:gitlab.com)",
      "WebFetch(domain:bitbucket.org)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:developer.mozilla.org)",
      "WebFetch(domain:w3schools.com)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:dev.to)",
      "WebFetch(domain:hashnode.com)",
      "WebFetch(domain:npmjs.com)",
      "WebFetch(domain:yarnpkg.com)",
      "WebFetch(domain:pnpm.io)",
      "WebFetch(domain:deno.land)",
      "WebFetch(domain:bun.sh)",
      "WebFetch(domain:unpkg.com)",
      "WebFetch(domain:jsdelivr.com)",
      "WebFetch(domain:cdnjs.com)",
      "WebFetch(domain:skypack.dev)",
      "WebFetch(domain:esm.sh)",
      "WebFetch(domain:pypi.org)",
      "WebFetch(domain:rubygems.org)",
      "WebFetch(domain:packagist.org)",
      "WebFetch(domain:crates.io)",
      "WebFetch(domain:pkg.go.dev)",
      "WebFetch(domain:maven.org)",
      "WebFetch(domain:nuget.org)",
      "WebFetch(domain:pub.dev)",
      "WebFetch(domain:hex.pm)",
      "WebFetch(domain:react.dev)",
      "WebFetch(domain:vuejs.org)",
      "WebFetch(domain:angular.io)",
      "WebFetch(domain:svelte.dev)",
      "WebFetch(domain:solidjs.com)",
      "WebFetch(domain:preactjs.com)",
      "WebFetch(domain:lit.dev)",
      "WebFetch(domain:alpinejs.dev)",
      "WebFetch(domain:nextjs.org)",
      "WebFetch(domain:nuxt.com)",
      "WebFetch(domain:remix.run)",
      "WebFetch(domain:astro.build)",
      "WebFetch(domain:sveltekit.dev)",
      "WebFetch(domain:qwik.builder.io)",
      "WebFetch(domain:fresh.deno.dev)",
      "WebFetch(domain:tailwindcss.com)",
      "WebFetch(domain:getbootstrap.com)",
      "WebFetch(domain:mui.com)",
      "WebFetch(domain:ant.design)",
      "WebFetch(domain:chakra-ui.com)",
      "WebFetch(domain:mantine.dev)",
      "WebFetch(domain:primereact.org)",
      "WebFetch(domain:vitejs.dev)",
      "WebFetch(domain:webpack.js.org)",
      "WebFetch(domain:rollupjs.org)",
      "WebFetch(domain:parceljs.org)",
      "WebFetch(domain:esbuild.github.io)",
      "WebFetch(domain:swc.rs)",
      "WebFetch(domain:turbo.build)",
      "WebFetch(domain:typescript.org)",
      "WebFetch(domain:typescriptlang.org)",
      "WebFetch(domain:jestjs.io)",
      "WebFetch(domain:vitest.dev)",
      "WebFetch(domain:cypress.io)",
      "WebFetch(domain:playwright.dev)",
      "WebFetch(domain:testing-library.com)",
      "WebFetch(domain:flutter.dev)",
      "WebFetch(domain:dart.dev)",
      "WebFetch(domain:reactnative.dev)",
      "WebFetch(domain:expo.dev)",
      "WebFetch(domain:ionicframework.com)",
      "WebFetch(domain:capacitorjs.com)",
      "WebFetch(domain:nativescript.org)",
      "WebFetch(domain:laravel.com)",
      "WebFetch(domain:symfony.com)",
      "WebFetch(domain:codeigniter.com)",
      "WebFetch(domain:wordpress.org)",
      "WebFetch(domain:drupal.org)",
      "WebFetch(domain:joomla.org)",
      "WebFetch(domain:rubyonrails.org)",
      "WebFetch(domain:sinatrarb.com)",
      "WebFetch(domain:hanami.org)",
      "WebFetch(domain:djangoproject.com)",
      "WebFetch(domain:flask.palletsprojects.com)",
      "WebFetch(domain:fastapi.tiangolo.com)",
      "WebFetch(domain:python.org)",
      "WebFetch(domain:spring.io)",
      "WebFetch(domain:quarkus.io)",
      "WebFetch(domain:micronaut.io)",
      "WebFetch(domain:vertx.io)",
      "WebFetch(domain:go.dev)",
      "WebFetch(domain:golang.org)",
      "WebFetch(domain:gin-gonic.com)",
      "WebFetch(domain:echo.labstack.com)",
      "WebFetch(domain:gofiber.io)",
      "WebFetch(domain:rust-lang.org)",
      "WebFetch(domain:tokio.rs)",
      "WebFetch(domain:actix.rs)",
      "WebFetch(domain:rocket.rs)",
      "WebFetch(domain:dotnet.microsoft.com)",
      "WebFetch(domain:asp.net)",
      "WebFetch(domain:visualstudio.com)",
      "WebFetch(domain:swift.org)",
      "WebFetch(domain:developer.apple.com)",
      "WebFetch(domain:kotlinlang.org)",
      "WebFetch(domain:developer.android.com)",
      "WebFetch(domain:docker.com)",
      "WebFetch(domain:hub.docker.com)",
      "WebFetch(domain:kubernetes.io)",
      "WebFetch(domain:helm.sh)",
      "WebFetch(domain:terraform.io)",
      "WebFetch(domain:ansible.com)",
      "WebFetch(domain:vagrantup.com)",
      "WebFetch(domain:aws.amazon.com)",
      "WebFetch(domain:docs.aws.amazon.com)",
      "WebFetch(domain:cloud.google.com)",
      "WebFetch(domain:console.cloud.google.com)",
      "WebFetch(domain:azure.microsoft.com)",
      "WebFetch(domain:docs.microsoft.com)",
      "WebFetch(domain:portal.azure.com)",
      "WebFetch(domain:firebase.google.com)",
      "WebFetch(domain:supabase.com)",
      "WebFetch(domain:appwrite.io)",
      "WebFetch(domain:pocketbase.io)",
      "WebFetch(domain:directus.io)",
      "WebFetch(domain:strapi.io)",
      "WebFetch(domain:vercel.com)",
      "WebFetch(domain:netlify.com)",
      "WebFetch(domain:railway.app)",
      "WebFetch(domain:render.com)",
      "WebFetch(domain:fly.io)",
      "WebFetch(domain:heroku.com)",
      "WebFetch(domain:digitalocean.com)",
      "WebFetch(domain:linode.com)",
      "WebFetch(domain:vultr.com)",
      "WebFetch(domain:cloudflare.com)",
      "WebFetch(domain:mongodb.com)",
      "WebFetch(domain:postgresql.org)",
      "WebFetch(domain:mysql.com)",
      "WebFetch(domain:mariadb.org)",
      "WebFetch(domain:redis.io)",
      "WebFetch(domain:elastic.co)",
      "WebFetch(domain:sqlite.org)",
      "WebFetch(domain:cockroachlabs.com)",
      "WebFetch(domain:planetscale.com)",
      "WebFetch(domain:neon.tech)",
      "WebFetch(domain:upstash.com)",
      "WebFetch(domain:graphql.org)",
      "WebFetch(domain:apollographql.com)",
      "WebFetch(domain:prisma.io)",
      "WebFetch(domain:typeorm.io)",
      "WebFetch(domain:sequelize.org)",
      "WebFetch(domain:knexjs.org)",
      "WebFetch(domain:git-scm.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "WebFetch(domain:gist.github.com)",
      "WebFetch(domain:postman.com)",
      "WebFetch(domain:insomnia.rest)",
      "WebFetch(domain:swagger.io)",
      "WebFetch(domain:openapi.org)",
      "WebFetch(domain:figma.com)",
      "WebFetch(domain:sketch.com)",
      "WebFetch(domain:adobe.com)",
      "WebFetch(domain:canva.com)",
      "WebFetch(domain:google.com)",
      "WebFetch(domain:youtube.com)",
      "WebFetch(domain:twitter.com)",
      "WebFetch(domain:linkedin.com)",
      "WebFetch(domain:facebook.com)",
      "WebFetch(domain:instagram.com)",
      "WebFetch(domain:reddit.com)",
      "WebFetch(domain:quora.com)",
      "WebFetch(domain:codepen.io)",
      "WebFetch(domain:codesandbox.io)",
      "WebFetch(domain:stackblitz.com)",
      "WebFetch(domain:replit.com)",
      "WebFetch(domain:glitch.com)",
      "WebFetch(domain:jsfiddle.net)",
      "WebFetch(domain:regex101.com)",
      "WebFetch(domain:caniuse.com)",
      "WebFetch(domain:bundlephobia.com)",
      "WebFetch(domain:devdocs.io)",
      "WebFetch(domain:mdn.io)",
      "WebFetch(domain:eslint.org)",
      "WebFetch(domain:prettier.io)",
      "WebFetch(domain:biomejs.dev)",
      "WebFetch(domain:rome.tools)",
      "WebFetch(domain:sentry.io)",
      "WebFetch(domain:logrocket.com)",
      "WebFetch(domain:bugsnag.com)",
      "WebFetch(domain:rollbar.com)",
      "WebFetch(domain:grafana.com)",
      "WebFetch(domain:prometheus.io)",
      "WebFetch(domain:elastic.co)",
      "WebFetch(domain:datadog.com)",
      "WebFetch(domain:newrelic.com)",
      "WebFetch(domain:stripe.com)",
      "WebFetch(domain:paypal.com)",
      "WebFetch(domain:square.com)",
      "WebFetch(domain:razorpay.com)",
      "WebFetch(domain:twilio.com)",
      "WebFetch(domain:sendgrid.com)",
      "WebFetch(domain:mailgun.com)",
      "WebFetch(domain:postmarkapp.com)",
      "WebFetch(domain:algolia.com)",
      "WebFetch(domain:meilisearch.com)",
      "WebFetch(domain:typesense.org)",
      "WebFetch(domain:pusher.com)",
      "WebFetch(domain:ably.com)",
      "WebFetch(domain:socket.io)",
      "WebFetch(domain:soketi.app)",
      "WebFetch(domain:auth0.com)",
      "WebFetch(domain:clerk.com)",
      "WebFetch(domain:supertokens.com)",
      "WebFetch(domain:fusionauth.io)",
      "WebFetch(domain:mapbox.com)",
      "WebFetch(domain:leafletjs.com)",
      "WebFetch(domain:openlayers.org)",
      "WebFetch(domain:fontawesome.com)",
      "WebFetch(domain:heroicons.com)",
      "WebFetch(domain:lucide.dev)",
      "WebFetch(domain:tabler-icons.io)",
      "WebFetch(domain:fonts.google.com)",
      "WebFetch(domain:unsplash.com)",
      "WebFetch(domain:pexels.com)",
      "WebFetch(domain:pixabay.com)",
      "WebFetch(domain:producthunt.com)",
      "WebFetch(domain:dribbble.com)",
      "WebFetch(domain:behance.net)",
      "WebFetch(domain:docs.firecrawl.dev)",
      "WebFetch(domain:firecrawl.dev)",
      "WebFetch(domain:perkforce.com)",
      "WebFetch(domain:aoneahsan.com)",
      "WebFetch(domain:zaions.com)",
      "Bash(npm outdated)",
      "Bash(yarn pack:*)",
      "Bash(npm pack:*)",
      "Bash(npm outdated:*)",
      "Bash(yarn install:*)",
      "Bash(yarn tsup)",
      "Bash(yarn:*)",
      "Bash(./fix-imports.sh)",
      "Bash(./revert-imports.sh:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(git rebase:*)",
      "Bash(git reset:*)",
      "Bash(./gradlew:*)",
      "Bash(curl:*)",
      "Bash(firebase projects:list:*)",
      "Bash(firebase use:*)",
      "Bash(firebase emulators:exec:*)",
      "Bash(firebase functions:shell:*)",
      "Bash(kill:*)",
      "Bash(do sed -i '' 's/\\buser\\./currentUser./g' \"$file\")",
      "WebFetch(domain:www.npmjs.com)",
      "WebFetch(domain:www.nexuspro.pk)",
      "Bash(vite build:*)",
      "Bash(xcode-select:*)",
      "Bash(xcodebuild:*)",
      "Bash(firebase functions:config:set:*)",
      "Bash(firebase functions:list:*)",
      "Bash(git add:*)",
      "Bash(pod cache clean:*)",
      "Bash(zip:*)",
      "Bash(nvm use:*)",
      "Bash(git commit:*)",
      "Bash(pod deintegrate:*)",
      "WebFetch(domain:www.zakya.com)",
      "Bash(export:*)",
      "WebFetch(domain:labsystem-a1.web.app)",
      "Bash(# Get list of files with unused imports warnings\nyarn lint 2>&1 | grep -E \"\"warning.*is defined but never used\"\" | grep -E \"\"import|from\"\" | awk -F'':'' ''{print $1}'' | sort -u | head -20)",
      "Bash(# Create a script to systematically fix common ESLint warnings\ncat > /tmp/fix-eslint-warnings.sh << ''EOF''\n#!/bin/bash\n\n# Function to fix unused imports in a file\nfix_unused_imports() {\n    local file=$1\n    echo \"\"Fixing unused imports in: $file\"\"\n    \n    # Common unused imports patterns\n    sed -i.bak \\\n        -e \"\"s/import { Timestamp } from ''firebase\\/firestore'';/\\/\\/ TODO: Use Timestamp for date fields when needed\\n\\/\\/ import { Timestamp } from ''firebase\\/firestore'';/g\"\" \\\n        -e \"\"s/^import.*''@\\/stores\\/auth.store'';$/\\/\\/ TODO: Implement user permission checks\\n\\/\\/ &/g\"\" \\\n        \"\"$file\"\"\n}\n\n# Function to comment out unused variables\nfix_unused_vars() {\n    local file=$1\n    echo \"\"Fixing unused variables in: $file\"\"\n    \n    # Common patterns for unused state variables\n    sed -i.bak \\\n        -e \"\"s/const \\[file, setFile\\] = useState/\\/\\/ TODO: Implement file handling\\n  \\/\\/ const [file, setFile] = useState/g\"\" \\\n        -e \"\"s/const \\[parsedData, setParsedData\\] = useState/\\/\\/ TODO: Implement data preview\\n  \\/\\/ const [parsedData, setParsedData] = useState/g\"\" \\\n        \"\"$file\"\"\n}\n\n# Get files with warnings\nFILES=$(yarn lint --format=unix 2>&1 | grep \"\"warning\"\" | awk -F'':'' ''{print $1}'' | sort -u)\n\nfor file in $FILES; do\n    if [[ -f \"\"$file\"\" ]]; then\n        fix_unused_imports \"\"$file\"\"\n        fix_unused_vars \"\"$file\"\" \n    fi\ndone\n\n# Clean up backup files\nfind . -name \"\"*.bak\"\" -delete\n\necho \"\"Completed fixing common ESLint warnings\"\"\nEOF\n\nchmod +x /tmp/fix-eslint-warnings.sh)",
      "Bash(# Get all unique warning patterns\nyarn lint 2>&1 | grep \"\"warning\"\" | awk -F\"\"''\"\" ''{print $2}'' | sort | uniq -c | sort -nr | head -20)",
      "Bash(# Get files with Filter import warnings\nyarn lint 2>&1 | grep -E \"\"warning.*''Filter'' is defined but never used\"\" | awk -F'':'' ''{print $1}'' | sort -u)",
      "Bash(git push:*)",
      "Bash(firebase login:*)",
      "Bash(wc:*)",
      "Bash(cloc:*)",
      "Bash(./scripts/deploy.sh:*)",
      "Bash(firebase hosting:sites:list:*)",
      "Bash(NODE_ENV=production npx webpack --mode production --config ./webpack.config.js)",
      "Bash(echo $PWD)",
      "Bash(git rm:*)",
      "Bash(git grep:*)",
      "Bash(git check-ignore:*)",
      "Bash(test:*)",
      "Bash(timeout 5 yarn dev:*)",
      "WebSearch"
    ],
    "deny": []
  }
}